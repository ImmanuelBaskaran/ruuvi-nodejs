const IOTA = require('iota.lib.js');
const CCurl = require('ccurl.interface.js');
const {
    promisify
} = require('util');

// not really used as we don't do any TX with value changes.
const MWM = 15;
let seed = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ9ABCDEFGHIJKLMNOPQRSTUVWXYZ9ABCDEFGHIJKLMNOPQRSTUVWXYZ9';
let targetAddress = '99999999999999999999999999999999999999999999999999999999999999999RUUVI9LOVES9IOTA';
let targetTag = 'ALL9THE9TAGGING9YOULL9NEED9';
let message

// sample MAM payload.

// construct iota.lib.js instance
let iota = new IOTA({
    'host': 'http://service.iotasupport.com',
    'port': 14265
});

const PCCurl = promisify(CCurl);
const PprepareTransfers = promisify(iota.api.prepareTransfers);
const PgetTransactionsToApprove = async depth => {
    return new Promise((resolve, reject) => {
        iota.api.getTransactionsToApprove(depth, function(err, suc) {
            if (err != undefined) {
                reject(err);
            } else {
                resolve(suc);
            }
        });
    });
};

const PbroadcastTransactions = async trytes => {
  return new Promise((resolve, reject) => {
    iota.api.broadcastTransactions(trytes, function(err, suc) {
      if (err != undefined) {
        reject(err);
      } else {
        resolve(suc);
      }
    });
  });
};

PprepareTransfers(seed, [{
        address: targetAddress,
        value: 0,
        message: message,
        tag: targetTag
    }]).then(transactions => {
        return PgetTransactionsToApprove(5).then(toApprove => {
            return PCCurl(toApprove.trunkTransaction, toApprove.branchTransaction, MWM, transactions);
        });
    }).then(bundle => PbroadcastTransactions(bundle))
    .then(ret => console.log(ret));
